import matplotlib.pyplot as plt
import numpy as np

# Simulation data
total_swap_volume_a = [0,0,0,0,0,0,210,92.82233815064453,0,0,0,0,0,0,395,0,56.634600636551404,0,378.6389113517222,76.0417686565453,0,261,0,0,0,168,0,0,176.3166145016757,0,109,229.9938257867995,0,0,241,0,109,0,0,143.9351096673577,0,174,0,0,193.86597896199956,79.47545064618343,0,0,29.41993530230231,119,0,215,0,0,0,0,0,317,0,478] 
total_swap_volume_b = [0,0,0,0,0,0,289.6055209956235,123,0,0,0,0,0,0,497.9752492775079,0,67,0,487,107,0,350.5605793876758,0,0,0,200.15237834565548,0,0,214,0,137.00980576467938,303,0,0,311.7439033651628,0,124.97165442255165,0,0,170,0,203.4331609354977,0,0,230,104,0,0,40,156.6827166210196,0,260.85775540808174,0,0,0,0,0,348.56729738366823,0,466.50328924686977] 
total_fees_a = [0,0,0,0,0,0,0.63,0,0,0,0,0,0,0,1.185,0,0,0,0,0,0,0.783,0,0,0,0.504,0,0,0,0,0.327,0,0,0,0.723,0,0.327,0,0,0,0,0.522,0,0,0,0,0,0,0,0.357,0,0.645,0,0,0,0,0,0.951,0,1.434] 
total_fees_b = [0,0,0,0,0,0,0,0.369,0,0,0,0,0,0,0,0,0.201,0,1.461,0.321,0,0,0,0,0,0,0,0,0.642,0,0,0.909,0,0,0,0,0,0,0,0.51,0,0,0,0,0.69,0.312,0,0,0.12,0,0,0,0,0,0,0,0,0,0,0] 
reserve_ratio = [0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.725124297624055,0.754653155696297,0.7307990548317025,0.7307990548317025,0.7307990548317026,0.7307990548317026,0.7307990548317025,0.7307990548317026,0.793212113600203,0.8557975040516054,0.8452925468142001,0.8399486709407852,0.7774926311123659,0.7106707351079,0.7017736345491764,0.7445218183284862,0.7851418509160073,0.7851418509160073,0.7851418509160072,0.8393604981793943,0.8919473972071673,0.8919473972071674,0.8239094135592322,0.7656483847938187,0.7955634955589419,0.7590555306495033,0.7054173559958896,0.7054173559958897,0.7730704510930032,0.8421361744376804,0.8721977835986022,0.8979206325363116,0.8979206325363116,0.8466771156903393,0.8031698102495395,0.8553177820167183,0.9053946899164907,0.9053946899164907,0.8428955607043459,0.7641870254440715,0.7442001096922323,0.7442001096922324,0.7354983825575577,0.7594966602974745,0.7840768942464401,0.8242039791519995,0.8611941568731525,0.8611941568731525,0.8611941568731524,0.8611941568731525,0.8611941568731525,0.9094370079447754,0.9546287030755639,1.0246444366377152] 
slippage_a_to_b = [0,0,0,0,0,0,-8.061739366468723,0,0,0,0,0,0,0,-7.868394556560957,0,0,0,0,0,0,-5.741696579864223,0,0,0,-6.459518571697092,0,0,0,0,-3.760241757209537,0,0,0,-8.751219892244286,0,-3.4466504875638018,0,0,0,0,-6.096911915501308,0,0,0,0,0,0,0,-3.7152451060051375,0,-4.868586650945912,0,0,0,0,0,-5.304694074485307,0,-6.833173641375742] 
slippage_b_to_a = [0,0,0,0,0,0,0,-3.7410985151240848,0,0,0,0,0,0,0,0,-1.2275050099669185,0,-7.435697202599935,-1.8435297467706457,0,0,0,0,0,0,0,0,-7.62802648014593,0,0,-7.623201162090494,0,0,0,0,0,0,0,-5.706909384766811,0,0,0,0,-6.9029705948363205,-3.1988790433598404,0,0,-1.1692724875132288,0,0,0,0,0,0,0,0,0,0,0] 

tvl = [2800,3400,4400,4380,3760,4960,5378.74,5193.095323698711,6793.095323698711,8393.095323698712,8288.395821204786,10288.395821204786,10488.395821204786,9587.980099757026,10375.610099757025,12175.610099757025,12062.340898483923,10580.689844297804,9823.41202159436,9671.328484281268,9014.693333632895,9535.127333632894,8080.926157296836,4087.2990461649765,5087.299046164977,5422.291046164976,4936.483181571353,4797.680934544604,4445.047705541252,6045.047705541252,6262.3937055412525,5802.406053967653,4588.596064828902,5188.596064828902,5669.150064828902,6669.150064828902,6886.496064828902,6166.953823733608,5308.145342426323,5020.275123091607,5620.275123091607,5967.2311230916075,6367.2311230916075,5854.467417324761,5466.735459400762,5307.784558108395,4948.557194144243,6748.557194144243,6689.7173235396385,6927.003323539639,8927.003323539639,9355.71332353964,8901.085346343387,8560.114363446197,8960.114363446197,9960.114363446197,11960.114363446197,12592.212363446197,13592.212363446197,14545.344363446196] 
reserve_a = [1000,1400,1700,2200,2190,1880,2480,2689.37,2596.5476618493553,3396.5476618493553,4196.547661849356,4144.197910602393,5144.197910602393,5244.197910602393,4793.990049878513,5187.805049878512,6087.805049878512,6031.170449241961,5290.344922148902,4911.70601079718,4835.664242140634,4507.346666816447,4767.563666816447,4040.463078648418,2043.6495230824883,2543.6495230824885,2711.145523082488,2468.2415907856766,2398.840467272302,2222.523852770626,3022.523852770626,3131.1968527706263,2901.2030269838265,2294.298032414451,2594.298032414451,2834.575032414451,3334.575032414451,3443.248032414451,3083.476911866804,2654.0726712131614,2510.1375615458037,2810.1375615458037,2983.6155615458038,3183.6155615458038,2927.2337086623806,2733.367729700381,2653.8922790541974,2474.2785970721216,3374.2785970721216,3344.8586617698193,3463.5016617698193,4463.501661769819,4677.85666176982,4450.542673171693,4280.057181723098,4480.057181723098,4980.057181723098,5980.057181723098,6296.106181723098,6796.106181723098] 
reserve_b = [1500,2100,2550,3300,3285,2820,3720,3430.3944790043765,3553.0254790043764,4647.717644669853,5742.40981033533,5670.776232129597,7039.141439211443,7175.977959919627,6559.92918735032,6061.953938072812,7113.604586431947,7180.403586431947,6298.414540287857,6783.953540287857,6890.632540287857,6422.792827935168,6072.232248547492,5146.156804575506,2602.904839040498,3239.7324383038176,3039.580059958162,2767.250174745891,2689.4416361138137,2902.7996361138134,3947.665681531557,3810.6558757668777,4112.746875766878,3252.3980490605045,3677.678200519874,3365.934297154711,3959.6625030875166,3834.690848664965,3434.0194446329415,2955.7987365947197,3125.2887365947195,3498.808752127664,3295.375591192166,3516.2737279135636,3233.1023599579257,3462.4123599579257,3566.100359957926,3324.7490357067695,4534.101182096804,4573.981182096804,4417.298465475785,5692.683580555701,5431.825825147619,5167.873745603252,4969.909685944977,5202.14535359763,5782.734522729262,6943.9128609925265,6595.345563608858,7119.1094085353] 

action = [0,0,0,1,1,0,2,2,0,0,1,0,0,1,2,0,2,1,2,2,1,2,1,1,0,2,1,1,2,0,2,2,1,0,2,0,2,1,1,2,0,2,0,1,2,2,1,0,2,2,0,2,1,1,0,0,0,2,0,2] 
action = np.array(action)

# Create masks for each action type
deposit_mask = action == 0
withdraw_mask = action == 1
swap_mask = action == 2

# LP Token distributions are given per LP address.
lp_token_distribution = {
	"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2": [10,10,10,10,10,10,10,10,17.640915008611562342,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,25.281830017223124684,6.881830017223126105,6.881830017223126105,6.881830017223126105,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,4.781830017223126016,1.081830017223125838,1.081830017223125838,1.081830017223125838,1.081830017223125838,2.798020126045172807,2.798020126045172807,2.798020126045172807,2.798020126045172807,2.798020126045172807,2.798020126045172807,2.798020126045172807,2.798020126045172807,12.018956864720973919,12.018956864720973919,12.018956864720973919,12.018956864720973919,12.018956864720973919,12.018956864720973919,20.817359516199874405,20.817359516199874405,20.817359516199874405,20.817359516199874405],
	"0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db": [4,4,4,4,0.899999999999999911,0.899999999999999911,0.899999999999999911,0.899999999999999911,0.899999999999999911,0.899999999999999911,0.399999999999999911,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,9.951143760764452838,4.051143760764452483,4.051143760764452483,4.051143760764452483,8.499844716971801179,8.499844716971801179,8.499844716971801179,8.499844716971801179,8.499844716971801179,11.233048022739392379,11.233048022739392379,11.233048022739392379,11.233048022739392379,11.233048022739392379,11.233048022739392379,11.233048022739392379,19.751330055133133519,19.751330055133133519,19.751330055133133519,19.751330055133133519,19.751330055133133519,19.751330055133133519,19.751330055133133519,19.751330055133133519,19.751330055133133519,19.751330055133133519,19.751330055133133519,23.929702325632902691,23.929702325632902691],
	"0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB": [0,0,0,0,0,6,6,6,6,6,6,6,6.955114376076445292,6.955114376076445292,6.955114376076445292,6.955114376076445292,6.955114376076445292,6.955114376076445292,6.955114376076445292,6.955114376076445292,6.955114376076445292,6.955114376076445292,0.255114376076445114,0.255114376076445114,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,4.862454893350011102,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,1.762454893350011013,0.262454893350011013,0.262454893350011013,0.262454893350011013,0.262454893350011013,0.262454893350011013,0.262454893350011013,0.262454893350011013],
	"0x617F2E2fD72FD9D5503197092aC168c91465E7f2": [0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10.943490347545472165,10.943490347545472165,4.34349034754547252,4.34349034754547252,4.34349034754547252,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,1.143490347545472342,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,4.05992704824504203,2.359927048245042074,2.359927048245042074,2.359927048245042074,2.359927048245042074,2.359927048245042074,2.359927048245042074,0.359927048245042074,0.359927048245042074,2.119607578540822171,6.518808904280272414,6.518808904280272414,6.518808904280272414,6.518808904280272414,6.518808904280272414],
	"0x17F6AD8Ef982297579C203069C1DbfFE4348c372": [0,0,5,4.899999999999999994,4.899999999999999994,4.899999999999999994,4.899999999999999994,4.899999999999999994,4.899999999999999994,4.899999999999999994,4.899999999999999994,4.899999999999999994,4.899999999999999994,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.600000000000000172,0.000000000000000194,0.000000000000000194,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,7.464997594704656859,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681,5.264997594704656681],
}

# Number of iterations 
iterations = np.arange(len(total_swap_volume_a))

plt.figure(figsize=(14, 6))
plt.plot(iterations, reserve_a, label="Reserve A", marker='o')
plt.plot(iterations, reserve_b, label="Reserve B", marker='x')
plt.plot(iterations, tvl, label="TVL", marker='s', linestyle='--', color='green')
plt.title("Reserves and TVL Over Time")
plt.xlabel("Iteration")
plt.ylabel("Value")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.savefig('reserves_over_time.png')

plt.figure(figsize=(12, 6))

# Step plot instead of line plot for "tabular" look
plt.step(iterations, reserve_ratio, where='post', label='Reserve Ratio', color='purple')

# Add action markers
plt.scatter(iterations[deposit_mask], np.array(reserve_ratio)[deposit_mask], marker="^", color="green", label="Deposit (A)", s=100)
plt.scatter(iterations[withdraw_mask], np.array(reserve_ratio)[withdraw_mask], marker="v", color="red", label="Withdraw (A)", s=100)
plt.scatter(iterations[swap_mask], np.array(reserve_ratio)[swap_mask], marker="o", color="blue", label="Swap (A)", s=80)

plt.xlabel('Iteration')
plt.ylabel('Reserve Ratio (TokenA / TokenB)')
plt.title('Reserve Ratio per Iteration')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.savefig('reserve_ratio.png')

# Plot Total Swap Volume for Token A and Token B
swap_indices = np.where(action == 2)[0]

# Extract swap-only data
swap_iters = iterations[swap_indices]
swap_vol_a = np.array(total_swap_volume_a)[swap_indices]
swap_vol_b = np.array(total_swap_volume_b)[swap_indices]
swap_fee_a = np.array(total_fees_a)[swap_indices]
swap_fee_b = np.array(total_fees_b)[swap_indices]

bar_width = 0.35
bar_pos_a = swap_iters - bar_width / 2
bar_pos_b = swap_iters + bar_width / 2

# Plot
plt.figure(figsize=(14, 7))
bars_a = plt.bar(bar_pos_a, swap_vol_a, width=bar_width, color='royalblue', label='Token A Swapped')
bars_b = plt.bar(bar_pos_b, swap_vol_b, width=bar_width, color='darkorange', label='Token B Swapped')

# Annotate fees on top of bars
for i in range(len(swap_iters)):
    if swap_fee_a[i] > 0:
        plt.text(bar_pos_a[i], swap_vol_a[i] + 10, f'Fee: {swap_fee_a[i]:.2f} A', ha='center', fontsize=9)
    if swap_fee_b[i] > 0:
        plt.text(bar_pos_b[i], swap_vol_b[i] + 10, f'Fee: {swap_fee_b[i]:.2f} B', ha='center', fontsize=9)

# Styling
plt.title("Swap Volume per Token with Fees")
plt.xlabel("Iteration")
plt.ylabel("Swap Volume")
plt.xticks(swap_iters)
plt.legend()
plt.grid(True, axis='y', linestyle='--', alpha=0.5)
plt.tight_layout()
plt.savefig("trading_activity.png")

plt.figure(figsize=(14, 6))

# Plot each LP address distribution over iterations
for idx, (_, distribution) in enumerate(lp_token_distribution.items(), start=1):
    plt.plot(iterations, distribution, label=f"LP {idx}")

plt.title("LP Token Distribution Over Iterations")
plt.xlabel("Iteration")
plt.ylabel("Token Distribution")
plt.legend()
plt.grid(True)
plt.tight_layout()

# Save and display the plot
plt.savefig('lp_token_distribution.png')

reserve_a = np.array(reserve_a)
reserve_b = np.array(reserve_b)
total_swap_volume_a = np.array(total_swap_volume_a)
total_swap_volume_b = np.array(total_swap_volume_b)
slippage_a_to_b = np.array(slippage_a_to_b)
slippage_b_to_a = np.array(slippage_b_to_a)
action = np.array(action)

# Swap mask
swap_mask = action == 2
swap_indices = np.where(swap_mask)[0]

# Reserve before each swap (handle index 0 separately if necessary)
pre_reserve_a = reserve_a[swap_indices - 1]
pre_reserve_b = reserve_b[swap_indices - 1]

# Swap volumes for swap events
swap_vol_a = total_swap_volume_a[swap_indices]
swap_vol_b = total_swap_volume_b[swap_indices]

# Slippage values
slip_a2b = slippage_a_to_b[swap_indices]
slip_b2a = slippage_b_to_a[swap_indices]

# Compute trade lot fractions
f_a = swap_vol_a / pre_reserve_a
f_b = swap_vol_b / pre_reserve_b

# Plot setup
bar_width = 0.35
iterations = np.arange(len(total_swap_volume_a))
swap_iters = iterations[swap_indices]
bar_pos_a = swap_iters - bar_width / 2
bar_pos_b = swap_iters + bar_width / 2

# Plot
plt.figure(figsize=(15, 8))
bars_a = plt.bar(bar_pos_a, swap_vol_a, width=bar_width, color='royalblue', label='Token A Swapped')
bars_b = plt.bar(bar_pos_b, swap_vol_b, width=bar_width, color='darkorange', label='Token B Swapped')

# Annotate with slippage and trade lot
for i in range(len(swap_iters)):
    if slip_a2b[i] != 0:
        text = f"{slip_a2b[i]:.2f}%\nLot: {f_a[i]:.2%}"
        plt.text(bar_pos_a[i], swap_vol_a[i] + 10, text, ha='center', fontsize=9)
    if slip_b2a[i] != 0:
        text = f"{slip_b2a[i]:.2f}%\nLot: {f_b[i]:.2%}"
        plt.text(bar_pos_b[i], swap_vol_b[i] + 10, text, ha='center', fontsize=9)

plt.title("Swap Volume with Slippage and Trade Lot Fraction")
plt.xlabel("Iteration")
plt.ylabel("Swap Volume")
plt.xticks(swap_iters)
plt.legend()
plt.grid(True, axis='y', linestyle='--', alpha=0.5)
plt.tight_layout()
plt.savefig("price_dynamics.png")